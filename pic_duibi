import os,multiprocessing
from PIL import Image
#使用第三方库：Pillow
import math
import operator
from functools import reduce

def pic_duibi(picname2):
    pic_chongfu = []
    for picname in os.listdir('.'):
        if not picname.endswith('.png'):
            continue

    # for i in range(2,381):
        image1 = Image.open(picname)
        image2 = Image.open('E:\\图片\\天空\\{}.png'.format(picname2))

        # image1=Image.open('E:\\图片\\天空\\2.png')
        # image3=Image.open('E:\\图片\\天空\\2.png')
        #把图像对象转换为直方图数据，存在list h1、h2 中
        h1=image1.histogram()
        h2=image2.histogram()

        result = math.sqrt(reduce(operator.add,  list(map(lambda a,b: (a-b)**2, h1, h2)))/len(h1) )
        '''
        sqrt:计算平方根，reduce函数：前一次调用的结果和sequence的下一个元素传递给operator.add
        operator.add(x,y)对应表达式：x+y
        这个函数是方差的数学公式：S^2= ∑(X-Y) ^2 / (n-1)
        '''
        print('第',picname,'张图和','第',picname2,'张图的对比结果是',result)
        s = '第{}张与第{}的对比结果是'.format(picname,picname2)
        with open('1.txt', 'a+', encoding='utf-8') as f:
            f.write(s+'\n')
    #result的值越大，说明两者的差别越大；如果result=0,则说明两张图一模一样

        #注意这里不能让对比的图片和自身对比以后，将自身添加到pic_chongfu列表中
        if result == 0 and picname != '{}.png'.format(picname2):
            pic_chongfu.append(picname)
        else:
            pass
    print(pic_chongfu)

pic_duibi('9')

# def printchongfu(chongfu_list):
#     print(chongfu_list)
#
# if __name__=='__main__':
#     pool=multiprocessing.Pool()
#     pool.map(pic_duibi,[i for i in range(2, 10)])
